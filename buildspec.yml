version: 0.6

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - pip install -r requirements.txt
      
  pre_build:
    commands:
      - echo "Running tests..."
      - mkdir -p data
      - python src/prepare_data.py
      - aws s3 cp data/breast_cancer.csv s3://${S3_BUCKET}/data/
      
  build:
    commands:
      - echo "Training model locally in CodeBuild..."
      - mkdir -p model
      - python src/train.py --data-path data/breast_cancer.csv --model-dir model --epochs 10
      - echo "Uploading model artifacts to S3..."
      - aws s3 cp model/model.pth s3://${S3_BUCKET}/models/
      
  post_build:
    commands:
      - echo "Updating Lambda function..."
      - cd lambda
      # Handle both Windows and Linux environments for zipping
      - |
        if [ -f /bin/bash ]; then
          # Linux environment
          echo "Using Linux zip command"
          zip -j lambda_function.zip lambda_function.py
        else
          # Windows environment
          echo "Using PowerShell Compress-Archive"
          powershell -Command "Compress-Archive -Path lambda_function.py -DestinationPath lambda_function.zip -Force"
        fi
      - aws lambda update-function-code --function-name ${LAMBDA_FUNCTION_NAME} --zip-file fileb://lambda_function.zip || echo "Lambda update skipped (function may not exist yet)"
      
artifacts:
  files:
    - '**/*'
  
cache:
  paths:
    - '/root/.cache/pip/**/*'

env:
  variables:
    S3_BUCKET: cancer-prediction-data-arash
    ENDPOINT_NAME: cancer-prediction-model
    LAMBDA_FUNCTION_NAME: cancer-prediction-lambda
  
  parameter-store:
    # S3_BUCKET: /myproject/s3-bucket
    # ENDPOINT_NAME: /myproject/endpoint-name
